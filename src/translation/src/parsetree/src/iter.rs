use std::sync::{Arc, RwLock};

use crate::{
    expr::{
        Await, BStringLit, BinExpr, Block, BooleanLit, Break, Call, CallArgument, Cast, Closure,
        Continue, DoWhileLoop, ExprParentheses, FloatLit, ForEach, If, IndexAccess, IntegerLit,
        List, Object, Path, TypeArgument, Return, StringLit, Switch, SwitchCase, TypeInfo,
        UnaryExpr, WhileLoop,
    },
    item::{
        Enum, EnumVariant, FunctionParameter, GenericParameter, Impl, Import, Module,
        NamedFunction, Package, SimplePath, Struct, StructField, Trait, TypeAlias, Variable,
    },
    tag::OpaqueTypeNameId,
    ty::{
        ArrayType, FunctionType, FunctionTypeParameter, Lifetime, ReferenceType, RefinementType,
        SliceType, TupleType, Type, TypePath,
    },
};

#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum Order {
    Enter,
    Leave,
}

pub trait ParseTreeIter {
    fn depth_first_iter(&self, f: &mut dyn FnMut(Order, RefNode));
}

pub enum RefNode<'a> {
    ExprSyntaxError,
    ExprParentheses(&'a ExprParentheses),
    ExprBooleanLit(&'a BooleanLit),
    ExprIntegerLit(&'a IntegerLit),
    ExprFloatLit(&'a FloatLit),
    ExprStringLit(&'a StringLit),
    ExprBStringLit(&'a BStringLit),
    ExprUnitLit,
    ExprTypeInfo(&'a TypeInfo),
    ExprList(&'a List),
    ExprObject(&'a Object),
    ExprUnaryExpr(&'a UnaryExpr),
    ExprBinExpr(&'a BinExpr),
    ExprCast(&'a Cast),
    ExprBlock(&'a Block),
    ExprClosure(&'a Closure),
    ExprVariable(&'a Variable),
    ExprPathTypeArgument(&'a TypeArgument),
    ExprPath(&'a Path),
    ExprIndexAccess(&'a IndexAccess),
    ExprIf(&'a If),
    ExprWhile(&'a WhileLoop),
    ExprDoWhileLoop(&'a DoWhileLoop),
    ExprSwitchCase(&'a SwitchCase),
    ExprSwitch(&'a Switch),
    ExprBreak(&'a Break),
    ExprContinue(&'a Continue),
    ExprReturn(&'a Return),
    ExprFor(&'a ForEach),
    ExprAwait(&'a Await),
    ExprCallArgument(&'a CallArgument),
    ExprCall(&'a Call),

    TypeSyntaxError,
    TypeBool,
    TypeUInt8,
    TypeUInt16,
    TypeUInt32,
    TypeUInt64,
    TypeUInt128,
    TypeInt8,
    TypeInt16,
    TypeInt32,
    TypeInt64,
    TypeInt128,
    TypeFloat8,
    TypeFloat16,
    TypeFloat32,
    TypeFloat64,
    TypeFloat128,
    TypeUnitType,
    TypeInferType,
    TypeTypeName(&'a TypePath),
    TypeRefinementType(&'a RefinementType),
    TypeTupleType(&'a TupleType),
    TypeArrayType(&'a ArrayType),
    TypeSliceType(&'a SliceType),
    TypeFunctionTypeParameter(&'a FunctionTypeParameter),
    TypeFunctionType(&'a FunctionType),
    TypeReferenceType(&'a ReferenceType),
    TypeOpaqueType(&'a OpaqueTypeNameId),
    TypeLatentType(&'a Block),
    TypeLifetime(&'a Lifetime),
    TypeParentheses(&'a Type),

    ItemSyntaxError,
    ItemPackage(&'a Package),
    ItemModule(&'a Module),
    ItemSimplePath(&'a SimplePath),
    ItemImport(&'a Import),
    ItemGenericParameter(&'a GenericParameter),
    ItemTypeAlias(&'a Arc<RwLock<TypeAlias>>),
    ItemStructField(&'a StructField),
    ItemStruct(&'a Arc<RwLock<Struct>>),
    ItemEnumVariant(&'a EnumVariant),
    ItemEnum(&'a Arc<RwLock<Enum>>),
    ItemTrait(&'a Arc<RwLock<Trait>>),
    ItemImpl(&'a Impl),
    ItemFunctionParameter(&'a FunctionParameter),
    ItemNamedFunction(&'a Arc<RwLock<NamedFunction>>),
    ItemVariable(&'a Arc<RwLock<Variable>>),
}
